@page "/"
@using MasaTodoApp.Web.ApiCallers
@using MasaTodoApp.Contracts
@namespace MasaTodoApp.Web.Pages

<div style="background-color: aliceblue;">
<MContainer Style="max-width:500px">
    <MTextField @bind-Value="_newTodo" Label="计划做些啥？" Solo OnKeyDown="OnEnterKeyDown">
        <AppendContent>
            <FadeTransition>
                <MIcon If="@(!string.IsNullOrEmpty(_newTodo))" OnClick="()=>Create()">mdi-plus-circle-outline</MIcon>
            </FadeTransition>
        </AppendContent>
    </MTextField>
    <h2 class="text-h4 success--text pl-4">计划任务：
        <FadeTransition LeaveAbsolute>
            <KeyTransitionElement Tag="span" Value="@($"task-{_tasks.Count}")">
                @_tasks.Count
            </KeyTransitionElement>
        </FadeTransition>
    </h2>
    <MDivider/>
    <MRow Class="my-1" Align=AlignTypes.Center>
        <strong class="mx-4 info--text text--darken-2">
            待完成：@RemainingTasks
        </strong>
         <MDivider Vertical></MDivider>
        <strong class="mx-4 success--text text--darken-2">
            已完成：@CompletedTasks
        </strong>
        <MSpacer></MSpacer>
        <MProgressCircular Value=Progress Class="mr-2"></MProgressCircular>
    </MRow>
      <MDivider Class="mb-4"></MDivider>

    @if (_tasks.Count > 0)
    {
        <MCard>
            <SlideYTransition>
                @for (var i = 0; i < _tasks.Count; i++)
                {
                    var task = _tasks[i];
                    if (i != 0)
                    {
                        <MDivider></MDivider>
                    }
                    <MListItem>
                        @if (editorTodoId == task.Id)
                        {
                            <MTextField Color="purple darken-2" @bind-Value="_updateTodo"></MTextField>
                        }
                        else
                        {
                            <MListItemAction>
                                <MCheckbox TValue="bool" Value="@task.Done"
                               ValueChanged="@(v => Done(task.Id,v))"
                               Color="@(task.Done ? "grey" : "primary")">
                                    <LabelContent>
                                        <div class="@(task.Done ? "grey--text" : "primary--text") ml-4">
                                            @task.Title
                                        </div>
                                    </LabelContent>
                                </MCheckbox>
                            </MListItemAction>
                        }

                        <MSpacer></MSpacer>
                        <MButton Icon Show="@(task.Done==false&&editorTodoId!=task.Id)" OnClick="()=>{editorTodoId=task.Id;_updateTodo=task.Title;}">
                            <MIcon>mdi-pencil</MIcon>
                        </MButton>

                        <MButton Outlined Small Show="@(editorTodoId==task.Id)" OnClick="()=>Update(task)" Color="success" Class="mr-2">
                            确定
                        </MButton>
                        <MButton Outlined Small Show="@(editorTodoId==task.Id)" OnClick="()=>editorTodoId=null">
                            取消
                        </MButton>

                        <MButton Icon Show="@(editorTodoId!=task.Id)" OnClick="()=>Delete(task.Id)" Color="error">
                            <MIcon>mdi-delete</MIcon>
                        </MButton>
                        <ScrollXTransition>
                            <MIcon If="@task.Done" Color="success">
                                mdi-check
                            </MIcon>
                        </ScrollXTransition>
                    </MListItem>
                }
            </SlideYTransition>
        </MCard>
    }

</MContainer>
</div>